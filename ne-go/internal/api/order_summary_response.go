// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OrderSummaryResponse order summary response
//
// swagger:model OrderSummaryResponse
type OrderSummaryResponse struct {

	// account number
	AccountNumber int32 `json:"accountNumber,omitempty"`

	// agreement Id
	AgreementID string `json:"agreementId,omitempty"`

	// charges
	Charges []*DeviceElement `json:"charges"`

	// currency
	Currency string `json:"currency,omitempty"`

	// error code
	ErrorCode string `json:"errorCode,omitempty"`

	// error message
	ErrorMessage string `json:"errorMessage,omitempty"`

	// esign agreement Id
	EsignAgreementID string `json:"esignAgreementId,omitempty"`

	// ibx country
	IbxCountry string `json:"ibxCountry,omitempty"`

	// ibx region
	IbxRegion string `json:"ibxRegion,omitempty"`

	// initial term
	InitialTerm int32 `json:"initialTerm,omitempty"`

	// metro
	Metro string `json:"metro,omitempty"`

	// monthly recurring charges
	MonthlyRecurringCharges float64 `json:"monthlyRecurringCharges,omitempty"`

	// non recurring charges
	NonRecurringCharges float64 `json:"nonRecurringCharges,omitempty"`

	// non renewal notice
	NonRenewalNotice string `json:"nonRenewalNotice,omitempty"`

	// order terms
	OrderTerms string `json:"orderTerms,omitempty"`

	// pi percentage
	PiPercentage string `json:"piPercentage,omitempty"`

	// product description
	ProductDescription string `json:"productDescription,omitempty"`

	// quantity
	Quantity int32 `json:"quantity,omitempty"`

	// quote content type
	QuoteContentType string `json:"quoteContentType,omitempty"`

	// quote file name
	QuoteFileName string `json:"quoteFileName,omitempty"`

	// reference Id
	ReferenceID string `json:"referenceId,omitempty"`

	// renewal period
	RenewalPeriod int32 `json:"renewalPeriod,omitempty"`

	// request sign type
	RequestSignType string `json:"requestSignType,omitempty"`

	// sign status
	SignStatus string `json:"signStatus,omitempty"`

	// sign type
	SignType string `json:"signType,omitempty"`

	// speed
	Speed string `json:"speed,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// total charges
	TotalCharges float64 `json:"totalCharges,omitempty"`
}

// Validate validates this order summary response
func (m *OrderSummaryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCharges(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrderSummaryResponse) validateCharges(formats strfmt.Registry) error {

	if swag.IsZero(m.Charges) { // not required
		return nil
	}

	for i := 0; i < len(m.Charges); i++ {
		if swag.IsZero(m.Charges[i]) { // not required
			continue
		}

		if m.Charges[i] != nil {
			if err := m.Charges[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("charges" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *OrderSummaryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrderSummaryResponse) UnmarshalBinary(b []byte) error {
	var res OrderSummaryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
