// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VirtualDeviceResponse virtual device response
//
// swagger:model VirtualDeviceResponse
type VirtualDeviceResponse struct {

	// account name
	AccountName string `json:"accountName,omitempty"`

	// account number
	AccountNumber string `json:"accountNumber,omitempty"`

	// acl
	ACL []string `json:"acl"`

	// additional bandwidth
	AdditionalBandwidth int64 `json:"additionalBandwidth,omitempty"`

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// created date
	CreatedDate string `json:"createdDate,omitempty"`

	// device serial no
	DeviceSerialNo string `json:"deviceSerialNo,omitempty"`

	// device type category
	DeviceTypeCategory string `json:"deviceTypeCategory,omitempty"`

	// device type code
	DeviceTypeCode string `json:"deviceTypeCode,omitempty"`

	// device type name
	DeviceTypeName string `json:"deviceTypeName,omitempty"`

	// device type vendor
	DeviceTypeVendor string `json:"deviceTypeVendor,omitempty"`

	// expiry
	Expiry string `json:"expiry,omitempty"`

	// host name
	HostName string `json:"hostName,omitempty"`

	// last updated by
	LastUpdatedBy string `json:"lastUpdatedBy,omitempty"`

	// last updated date
	LastUpdatedDate string `json:"lastUpdatedDate,omitempty"`

	// license file Id
	LicenseFileID string `json:"licenseFileId,omitempty"`

	// license name
	LicenseName string `json:"licenseName,omitempty"`

	// license status
	LicenseStatus string `json:"licenseStatus,omitempty"`

	// license type
	LicenseType string `json:"licenseType,omitempty"`

	// management gateway Ip
	ManagementGatewayIP string `json:"managementGatewayIp,omitempty"`

	// management Ip
	ManagementIP string `json:"managementIp,omitempty"`

	// metro code
	MetroCode string `json:"metroCode,omitempty"`

	// metro name
	MetroName string `json:"metroName,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// notifications
	Notifications []string `json:"notifications"`

	// package code
	PackageCode string `json:"packageCode,omitempty"`

	// package name
	PackageName string `json:"packageName,omitempty"`

	// primary Dns name
	PrimaryDNSName string `json:"primaryDnsName,omitempty"`

	// public gateway Ip
	PublicGatewayIP string `json:"publicGatewayIp,omitempty"`

	// public Ip
	PublicIP string `json:"publicIp,omitempty"`

	// purchase order number
	PurchaseOrderNumber string `json:"purchaseOrderNumber,omitempty"`

	// redundancy type
	RedundancyType string `json:"redundancyType,omitempty"`

	// redundant UUID
	RedundantUUID string `json:"redundantUUID,omitempty"`

	// region
	Region string `json:"region,omitempty"`

	// secondary Dns name
	SecondaryDNSName string `json:"secondaryDnsName,omitempty"`

	// site Id
	SiteID string `json:"siteId,omitempty"`

	// ssh Ip address
	SSHIPAddress string `json:"sshIpAddress,omitempty"`

	// ssh Ip fqdn
	SSHIPFqdn string `json:"sshIpFqdn,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// system Ip address
	SystemIPAddress string `json:"systemIpAddress,omitempty"`

	// term length
	TermLength int64 `json:"termLength,omitempty"`

	// throughput
	Throughput int32 `json:"throughput,omitempty"`

	// throughput unit
	ThroughputUnit string `json:"throughputUnit,omitempty"`

	// uuid
	UUID string `json:"uuid,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this virtual device response
func (m *VirtualDeviceResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VirtualDeviceResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VirtualDeviceResponse) UnmarshalBinary(b []byte) error {
	var res VirtualDeviceResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
